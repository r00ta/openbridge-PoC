quarkus.http.cors=true
quarkus.swagger-ui.always-include=true
quarkus.oidc.enabled=false

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${OB_DB_USERNAME}
quarkus.datasource.password=${OB_DB_PASSWORD}
quarkus.datasource.jdbc.url=jdbc:postgresql://${OB_DB_HOST}:${OB_DB_PORT:5432}/${OB_DB_SCHEMA:ob}
quarkus.datasource.jdbc.initial-size=10
quarkus.datasource.jdbc.min-size=10
quarkus.datasource.jdbc.max-size=50
quarkus.datasource.jdbc.leak-detection-interval=5M
quarkus.datasource.jdbc.transaction-isolation-level=read-committed
quarkus.datasource.jdbc.new-connection-sql=select 1;
quarkus.datasource.jdbc.validation-query-sql=select 1;
quarkus.hibernate-orm.jdbc.timezone=UTC
quarkus.hibernate-orm.sql-load-script = init_db.sql
quarkus.hibernate-orm.database.generation=none

# Flyway
quarkus.flyway.connect-retries=10
quarkus.flyway.migrate-at-start=true
quarkus.flyway.validate-on-migrate=true
quarkus.flyway.ignore-missing-migrations=true
quarkus.flyway.create-schemas=true
quarkus.flyway.schemas=topics, subscription
quarkus.flyway.baseline-on-migrate=true

# DEV
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/ob
%dev.quarkus.datasource.username=ob
%dev.quarkus.datasource.password=ob
%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.log.bind-parameters=true
%dev.quarkus.hibernate-orm.database.generation=drop-and-create

# The Kafka broker location (defaults to localhost:9092)
kafka.bootstrap.servers=localhost:9092

# Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming.events-in.connector=smallrye-kafka
mp.messaging.incoming.events-in.topic=events
#mp.messaging.incoming.events.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.events-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.events-out.connector=smallrye-kafka
mp.messaging.outgoing.events-out.topic=events
#mp.messaging.outgoing.events-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.events-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer